Resources:
  TablePutRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ${self:custom.currentStage}-UserPut-access
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ${self:custom.currentStage}-UserPut
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                Resource:
                  - !GetAtt UsersTable.Arn
  TableListRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ${self:custom.currentStage}-UserList-access
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ${self:custom.currentStage}-UserList
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:Scan
                Resource:
                  - !GetAtt UsersTable.Arn
  TableGetRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ${self:custom.currentStage}-UserGet-access
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ${self:custom.currentStage}-UserGet
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                Resource:
                  - !GetAtt UsersTable.Arn
  TableUpdateRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ${self:custom.currentStage}-UserUpdate-access
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ${self:custom.currentStage}-UserUpdate
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:UpdateItem
                Resource:
                  - !GetAtt UsersTable.Arn
  TableDeleteRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ${self:custom.currentStage}-UserDelete-access
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ${self:custom.currentStage}-UserDelete
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:DeleteItem
                Resource:
                  - !GetAtt UsersTable.Arn
