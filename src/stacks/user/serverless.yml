# org: ${file(../../../default.yml):org}
# app: ${file(../../../default.yml):app}
frameworkVersion: ${file(../../../default.yml):frameworkVersion}

service: user-mng
params: ${file(../../../default.yml):params}
custom: ${file(../../../default.yml):custom}

provider:
  name: aws
  runtime: nodejs16.x
  region: ${opt:region, 'ap-southeast-1'}
  # The S3 prefix under which deployed artifacts are stored (default: serverless)
  deploymentPrefix: sls-${self:service}
  deploymentBucket: 
    name: ${param:DEPLOYMENT_BUCKET_NAME}
    # Prevents public access via ACLs or bucket policies (default: false)
    # Note: the deployment bucket is not public by default. These are additional ACLs.
    blockPublicAccess: true
  deploymentMethod: direct
  environment:
    TABLE: ${param:USER_TABLE}
    STATE: ${sls:stage}

functions:
  create:
    handler: handler.createUser
    events:
      - http:
          path: users
          method: post
          cors: true
    role: TablePutRole

  list:
    handler: handler.getListUser
    events:
      - http:
          path: users
          method: get
          cors: true
    role: TableListRole
        
  get:
    handler: handler.getUser
    events:
      - http:
          path: users/{id}
          method: get
          cors: true
    role: TableGetRole
        
  update:
    handler: handler.updateUser
    events:
      - http:
          path: users/{id}
          method: put
          cors: true
    role: TableUpdateRole

  delete:
    handler: handler.deleteUser
    events:
      - http:
          path: users/{id}
          method: delete
          cors: true 
    role: TableDeleteRole

resources:
  - ${file(./resources/dynamoDB.yml)}
  - ${file(./resources/roles.yml)}

plugins: ${file(../../../default.yml):plugins}
