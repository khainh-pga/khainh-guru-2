Resources:
  GlueDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: user-hub-${self:custom.currentStage}
  AWSGlueJobRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: glue-access-${self:custom.currentStage}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - glue.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole"
      Policies:
        - PolicyName: DatalakeRead-${self:custom.currentStage}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListObjects
                  - s3:GetObject
                Resource:
                  - Fn::Join:
                      - ""
                      - - !GetAtt DataLake.Arn
                        - /data*
        - PolicyName: DynamoDBRead-${self:custom.currentStage}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:Scan
                  - dynamodb:DescribeTable
                Resource:
                  - !ImportValue user-table-access-${self:custom.stage}
                  - !ImportValue product-table-access-${self:custom.stage}

  GlueClassifier:
    Type: AWS::Glue::Classifier
    Properties:
      GrokClassifier:
        Name: "CrawlerClassifier"
        Classification: "wikiData"
        GrokPattern: "%{NOTSPACE:createdAt}"
 
  UserCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      Role: !GetAtt AWSGlueJobRole.Arn
      # Classifiers:
      #   - ''
      Description: Cron job to sync user table schema
      SchemaChangePolicy:
        DeleteBehavior: DEPRECATE_IN_DATABASE
        UpdateBehavior: UPDATE_IN_DATABASE
      Schedule: 
        ScheduleExpression: "cron(0 18 * * ? *)"
      DatabaseName: ${self:custom.GLUE_DATABASE}
      Targets:
        DynamoDBTargets:
          - Path: ${self:custom.USER_TABLE}
      TablePrefix: test-
      Name: user-crawler
      Configuration: "{\"Version\":1.0,\"CrawlerOutput\":{\"Partitions\":{\"AddOrUpdateBehavior\":\"InheritFromTable\"},\"Tables\":{\"AddOrUpdateBehavior\":\"MergeNewColumns\"}}}"

  ProductCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      Role: !GetAtt AWSGlueJobRole.Arn
      # Classifiers:
      #   - ''
      Description: Cron job to sync product table schema
      SchemaChangePolicy:
        DeleteBehavior: DEPRECATE_IN_DATABASE
        UpdateBehavior: UPDATE_IN_DATABASE
      Schedule: 
        ScheduleExpression: "cron(0 18 * * ? *)"
      DatabaseName: ${self:custom.GLUE_DATABASE}
      Targets:
        DynamoDBTargets:
          - Path: ${self:custom.PRODUCT_TABLE}
      TablePrefix: test-
      Name: product-crawler
      Configuration: "{\"Version\":1.0,\"CrawlerOutput\":{\"Partitions\":{\"AddOrUpdateBehavior\":\"InheritFromTable\"},\"Tables\":{\"AddOrUpdateBehavior\":\"MergeNewColumns\"}}}"


  # ProcessETLJob:
  #   Type: "AWS::Glue::Job"
  #   Properties:
  #     Role: !GetAtt AWSGlueJobRole.Arn
  #     Name: "Process ETL"
  #     Command: {
  #       "Name" : "glueetl",
  #       "ScriptLocation": !Sub "s3://${ArtifactBucketName}/${ETLScriptsPrefix}/process_sales_data.py"
  #     }
  #     DefaultArguments: {
  #         "--database_name" : ${self:custom.GLUE_DATABASE},
  #         "--table_name" : ${self:custom.SalesPipelineTableName},
  #         "--s3_output_path": !Sub "s3://${DataBucketName}/${ETLOutputPrefix}/tmp/sales"
  #     }
  #     MaxRetries: 0
  #     Description: "Process Sales Pipeline data."
  #     AllocatedCapacity: 5

  # ProcessMarketingDataJob:
  #   Type: "AWS::Glue::Job"
  #   Properties:
  #     Role: ${self:custom.AWSGlueJobRole}
  #     Name: "ProcessMarketingData"
  #     Command: {
  #       "Name" : "glueetl",
  #       "ScriptLocation": !Sub "s3://${ArtifactBucketName}/${ETLScriptsPrefix}/process_marketing_data.py"
  #     }
  #     DefaultArguments: {
  #         "--database_name" : ${self:custom.MarketingAndSalesDatabaseName},
  #         "--table_name" : ${self:custom.MarketingTableName},
  #         "--s3_output_path": !Sub "s3://${DataBucketName}/${ETLOutputPrefix}/tmp/marketing"
  #     }
  #     MaxRetries: 0
  #     Description: "Process Marketing data."
  #     AllocatedCapacity: 5

  # JoinMarketingAndSalesDataJob:
  #   Type: "AWS::Glue::Job"
  #   Properties:
  #     Role: ${self:custom.AWSGlueJobRole}
  #     Name: "JoinMarketingAndSalesData"
  #     Command: {
  #       "Name" : "glueetl",
  #       "ScriptLocation": !Sub "s3://${ArtifactBucketName}/${ETLScriptsPrefix}/join_marketing_and_sales_data.py"
  #     }
  #     DefaultArguments: {
  #       "--database_name": ${self:custom.MarketingAndSalesDatabaseName},
  #       "--s3_output_path": !Sub "s3://${DataBucketName}/${ETLOutputPrefix}/sales-leads-influenced",
  #       "--s3_sales_data_path": !Sub "s3://${DataBucketName}/${ETLOutputPrefix}/tmp/sales",
  #       "--s3_marketing_data_path": !Sub "s3://${DataBucketName}/${ETLOutputPrefix}/tmp/marketing"
  #     }
  #     MaxRetries: 0
  #     Description: "Join Marketing and Sales data."
  #     AllocatedCapacity: 5