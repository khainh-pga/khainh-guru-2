name: Deploy staging

on:
  push:
    branches:
      - staging

jobs:
  deploy-user-stack:
    name: deploy-user-stack
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: cd src/stacks/user && npx yarn
    - name: serverless deploy
      uses: serverless/github-action@v1.53.0
      with:
        args: -c "cd ./src/stacks/user && npm i && serverless deploy --stage staging"
        entrypoint: /bin/sh
      env:
        # SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
        # or if using AWS credentials directly
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        STATE: staging
    
  deploy-product-stack:
    name: deploy-product-stack
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: cd src/stacks/product && npx yarn
    - name: serverless deploy
      uses: serverless/github-action@v1.53.0
      with:
        args: -c "cd ./src/stacks/product && npm i && serverless deploy --stage staging"
        entrypoint: /bin/sh
      env:
        # SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
        # or if using AWS credentials directly
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        STATE: staging